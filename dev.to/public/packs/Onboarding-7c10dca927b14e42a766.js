webpackJsonp([8],{

/***/ 187:
/*!*********************************************!*\
  !*** ./app/javascript/packs/Onboarding.jsx ***!
  \*********************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__(/*! preact */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__chat_util__ = __webpack_require__(/*! ../chat/util */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_utils_getUnopenedChannels__ = __webpack_require__(/*! ../src/utils/getUnopenedChannels */ 188);\n\n\n\n\nHTMLDocument.prototype.ready = new Promise(function (resolve) {\n  if (document.readyState !== 'loading') {\n    return resolve();\n  }\n  document.addEventListener('DOMContentLoaded', function () {\n    return resolve();\n  });\n  return null;\n});\n\nfunction isUserSignedIn() {\n  return document.head.querySelector('meta[name=\"user-signed-in\"][content=\"true\"]') !== null;\n}\n\nfunction renderPage() {\n  __webpack_require__.e/* import() */(2).then(__webpack_require__.bind(null, /*! ../src/Onboarding */ 205)).then(function (_ref) {\n    var Onboarding = _ref.default;\n\n    var waitingForOnboarding = setInterval(function () {\n      if (document.getElementById(\"main-head-stylesheet\")) {\n        Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"render\"])(Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(Onboarding, null), document.getElementById('top-bar'));\n        clearInterval(waitingForOnboarding);\n      }\n    }, 3);\n  }).catch(function (error) {\n    // eslint-disable-next-line no-console\n    console.error('Unable to load onboarding', error);\n  });\n}\n\ndocument.ready.then(Object(__WEBPACK_IMPORTED_MODULE_1__chat_util__[\"c\" /* getUserDataAndCsrfToken */])().then(function (_ref2) {\n  var currentUser = _ref2.currentUser,\n      csrfToken = _ref2.csrfToken;\n\n  window.currentUser = currentUser;\n  window.csrfToken = csrfToken;\n\n  Object(__WEBPACK_IMPORTED_MODULE_2__src_utils_getUnopenedChannels__[\"a\" /* default */])();\n\n  if (isUserSignedIn() && !currentUser.saw_onboarding) {\n    renderPage();\n  }\n}).catch(function (error) {\n  // eslint-disable-next-line no-console\n  console.error('Error getting user and CSRF Token', error);\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvamF2YXNjcmlwdC9wYWNrcy9PbmJvYXJkaW5nLmpzeD9hYjg5Il0sIm5hbWVzIjpbIkhUTUxEb2N1bWVudCIsInByb3RvdHlwZSIsInJlYWR5IiwiUHJvbWlzZSIsImRvY3VtZW50IiwicmVhZHlTdGF0ZSIsInJlc29sdmUiLCJhZGRFdmVudExpc3RlbmVyIiwiaXNVc2VyU2lnbmVkSW4iLCJoZWFkIiwicXVlcnlTZWxlY3RvciIsInJlbmRlclBhZ2UiLCJ0aGVuIiwiT25ib2FyZGluZyIsImRlZmF1bHQiLCJ3YWl0aW5nRm9yT25ib2FyZGluZyIsInNldEludGVydmFsIiwiZ2V0RWxlbWVudEJ5SWQiLCJyZW5kZXIiLCJjbGVhckludGVydmFsIiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRVc2VyRGF0YUFuZENzcmZUb2tlbiIsImN1cnJlbnRVc2VyIiwiY3NyZlRva2VuIiwid2luZG93IiwiZ2V0VW5vcGVuZWRDaGFubmVscyIsInNhd19vbmJvYXJkaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTs7QUFFQUEsYUFBYUMsU0FBYixDQUF1QkMsS0FBdkIsR0FBK0IsSUFBSUMsT0FBSixDQUFZLG1CQUFXO0FBQ3BELE1BQUlDLFNBQVNDLFVBQVQsS0FBd0IsU0FBNUIsRUFBdUM7QUFDckMsV0FBT0MsU0FBUDtBQUNEO0FBQ0RGLFdBQVNHLGdCQUFULENBQTBCLGtCQUExQixFQUE4QztBQUFBLFdBQU1ELFNBQU47QUFBQSxHQUE5QztBQUNBLFNBQU8sSUFBUDtBQUNELENBTjhCLENBQS9COztBQVFBLFNBQVNFLGNBQVQsR0FBMEI7QUFDeEIsU0FDRUosU0FBU0ssSUFBVCxDQUFjQyxhQUFkLENBQ0UsNkNBREYsTUFFTSxJQUhSO0FBS0Q7O0FBRUQsU0FBU0MsVUFBVCxHQUFzQjtBQUNwQiw0R0FDR0MsSUFESCxDQUNRLGdCQUE2QjtBQUFBLFFBQWpCQyxVQUFpQixRQUExQkMsT0FBMEI7O0FBQ2pDLFFBQUlDLHVCQUF1QkMsWUFBWSxZQUFVO0FBQy9DLFVBQUlaLFNBQVNhLGNBQVQsQ0FBd0Isc0JBQXhCLENBQUosRUFBcUQ7QUFDbkRDLDhEQUFNQSxDQUFDLGtEQUFDLFVBQUQsT0FBUCxFQUF1QmQsU0FBU2EsY0FBVCxDQUF3QixTQUF4QixDQUF2QjtBQUNBRSxzQkFBY0osb0JBQWQ7QUFDRDtBQUNGLEtBTDBCLEVBS3hCLENBTHdCLENBQTNCO0FBTUQsR0FSSCxFQVNHSyxLQVRILENBU1MsaUJBQVM7QUFDZDtBQUNBQyxZQUFRQyxLQUFSLENBQWMsMkJBQWQsRUFBMkNBLEtBQTNDO0FBQ0QsR0FaSDtBQWFEOztBQUVEbEIsU0FBU0YsS0FBVCxDQUFlVSxJQUFmLENBQ0VXLG1GQUF1QkEsR0FDcEJYLElBREgsQ0FDUSxpQkFBZ0M7QUFBQSxNQUE3QlksV0FBNkIsU0FBN0JBLFdBQTZCO0FBQUEsTUFBaEJDLFNBQWdCLFNBQWhCQSxTQUFnQjs7QUFDcENDLFNBQU9GLFdBQVAsR0FBcUJBLFdBQXJCO0FBQ0FFLFNBQU9ELFNBQVAsR0FBbUJBLFNBQW5COztBQUVBRSx5RkFBbUJBOztBQUVuQixNQUFJbkIsb0JBQW9CLENBQUNnQixZQUFZSSxjQUFyQyxFQUFxRDtBQUNuRGpCO0FBQ0Q7QUFDRixDQVZILEVBV0dTLEtBWEgsQ0FXUyxpQkFBUztBQUNkO0FBQ0FDLFVBQVFDLEtBQVIsQ0FBYyxtQ0FBZCxFQUFtREEsS0FBbkQ7QUFDRCxDQWRILENBREYiLCJmaWxlIjoiMTg3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgcmVuZGVyIH0gZnJvbSAncHJlYWN0JztcbmltcG9ydCB7IGdldFVzZXJEYXRhQW5kQ3NyZlRva2VuIH0gZnJvbSAnLi4vY2hhdC91dGlsJztcbmltcG9ydCBnZXRVbm9wZW5lZENoYW5uZWxzIGZyb20gJy4uL3NyYy91dGlscy9nZXRVbm9wZW5lZENoYW5uZWxzJztcblxuSFRNTERvY3VtZW50LnByb3RvdHlwZS5yZWFkeSA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2xvYWRpbmcnKSB7XG4gICAgcmV0dXJuIHJlc29sdmUoKTtcbiAgfVxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4gcmVzb2x2ZSgpKTtcbiAgcmV0dXJuIG51bGw7XG59KTtcblxuZnVuY3Rpb24gaXNVc2VyU2lnbmVkSW4oKSB7XG4gIHJldHVybiAoXG4gICAgZG9jdW1lbnQuaGVhZC5xdWVyeVNlbGVjdG9yKFxuICAgICAgJ21ldGFbbmFtZT1cInVzZXItc2lnbmVkLWluXCJdW2NvbnRlbnQ9XCJ0cnVlXCJdJyxcbiAgICApICE9PSBudWxsXG4gICk7XG59XG5cbmZ1bmN0aW9uIHJlbmRlclBhZ2UoKSB7XG4gIGltcG9ydCgnLi4vc3JjL09uYm9hcmRpbmcnKVxuICAgIC50aGVuKCh7IGRlZmF1bHQ6IE9uYm9hcmRpbmcgfSkgPT4ge1xuICAgICAgbGV0IHdhaXRpbmdGb3JPbmJvYXJkaW5nID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtcbiAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbi1oZWFkLXN0eWxlc2hlZXRcIikpIHtcbiAgICAgICAgICByZW5kZXIoPE9uYm9hcmRpbmcgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b3AtYmFyJykpXG4gICAgICAgICAgY2xlYXJJbnRlcnZhbCh3YWl0aW5nRm9yT25ib2FyZGluZyk7XG4gICAgICAgIH1cbiAgICAgIH0sIDMpXG4gICAgfSlcbiAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBsb2FkIG9uYm9hcmRpbmcnLCBlcnJvcik7XG4gICAgfSk7XG59XG5cbmRvY3VtZW50LnJlYWR5LnRoZW4oXG4gIGdldFVzZXJEYXRhQW5kQ3NyZlRva2VuKClcbiAgICAudGhlbigoeyBjdXJyZW50VXNlciwgY3NyZlRva2VuIH0pID0+IHtcbiAgICAgIHdpbmRvdy5jdXJyZW50VXNlciA9IGN1cnJlbnRVc2VyO1xuICAgICAgd2luZG93LmNzcmZUb2tlbiA9IGNzcmZUb2tlbjtcblxuICAgICAgZ2V0VW5vcGVuZWRDaGFubmVscygpO1xuXG4gICAgICBpZiAoaXNVc2VyU2lnbmVkSW4oKSAmJiAhY3VycmVudFVzZXIuc2F3X29uYm9hcmRpbmcpIHtcbiAgICAgICAgcmVuZGVyUGFnZSgpO1xuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIHVzZXIgYW5kIENTUkYgVG9rZW4nLCBlcnJvcik7XG4gICAgfSksXG4pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2phdmFzY3JpcHQvcGFja3MvT25ib2FyZGluZy5qc3giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///187\n");

/***/ }),

/***/ 188:
/*!**********************************************************!*\
  !*** ./app/javascript/src/utils/getUnopenedChannels.jsx ***!
  \**********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getUnopenedChannels;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__(/*! preact */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pusher__ = __webpack_require__(/*! ./pusher */ 9);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar UnopenedChannelNotice = function (_Component) {\n  _inherits(UnopenedChannelNotice, _Component);\n\n  function UnopenedChannelNotice(props) {\n    _classCallCheck(this, UnopenedChannelNotice);\n\n    var _this = _possibleConstructorReturn(this, (UnopenedChannelNotice.__proto__ || Object.getPrototypeOf(UnopenedChannelNotice)).call(this, props));\n\n    Object.defineProperty(_this, 'receiveNewMessage', {\n      enumerable: true,\n      writable: true,\n      value: function value(e) {\n        if (location.pathname.startsWith(\"/connect\")) {\n          return;\n        }\n        var channels = _this.state.unopenedChannels;\n        var newObj = { adjusted_slug: e.chat_channel_adjusted_slug };\n        if (channels.filter(function (obj) {\n          return obj.adjusted_slug === newObj.adjusted_slug;\n        }).length === 0 && newObj.adjusted_slug != '@' + window.currentUser.username) {\n          channels.push(newObj);\n        }\n        _this.setState({\n          visible: channels.length > 0 && e.user_id != window.currentUser.id,\n          unopenedChannels: channels\n        });\n\n        var number = document.getElementById(\"connect-number\");\n        number.classList.add(\"showing\");\n        number.innerHTML = channels.length;\n        var component = _this;\n        if (channels.length === 0) {\n          number.classList.remove(\"showing\");\n        } else {\n          document.getElementById(\"connect-link\").href = '/connect/' + channels[0].adjusted_slug;\n        }\n        setTimeout(function () {\n          component.setState({ visible: false });\n        }, 7500);\n      }\n    });\n    Object.defineProperty(_this, 'handleClick', {\n      enumerable: true,\n      writable: true,\n      value: function value(e) {\n        document.getElementById(\"connect-number\").classList.remove(\"showing\");\n        _this.setState({ visible: false });\n      }\n    });\n\n    var unopenedChannels = _this.props.unopenedChannels;\n    var visible = unopenedChannels.length > 0 ? true : false;\n    _this.state = {\n      visible: visible,\n      unopenedChannels: unopenedChannels };\n    return _this;\n  }\n\n  _createClass(UnopenedChannelNotice, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      Object(__WEBPACK_IMPORTED_MODULE_1__pusher__[\"a\" /* default */])(this.props.pusherKey, {\n        channelId: 'private-message-notifications-' + window.currentUser.id,\n        messageCreated: this.receiveNewMessage\n      });\n      var component = this;\n      document.getElementById(\"connect-link\").onclick = function () {\n        //Hack, should probably be its own component in future\n        document.getElementById(\"connect-number\").classList.remove(\"showing\");\n        component.setState({ visible: false });\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.state.visible) {\n        var channels = this.state.unopenedChannels.map(function (channel) {\n          return Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n            'a',\n            {\n              href: \"/connect/\" + channel.adjusted_slug,\n              style: {\n                background: \"#66e2d5\",\n                color: \"black\",\n                border: \"1px solid black\",\n                padding: \"2px 7px\",\n                display: \"inline-block\",\n                margin: \"3px 6px\",\n                borderRadius: \"3px\" } },\n            channel.adjusted_slug\n          );\n        });\n        return Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(\n          'a',\n          {\n            onClick: this.handleClick,\n            href: \"/connect/\" + this.state.unopenedChannels[0].adjusted_slug,\n            style: {\n              position: 'fixed',\n              zIndex: '200',\n              top: '44px',\n              right: 0,\n              left: 0,\n              background: '#66e2d5',\n              borderBottom: '1px solid black',\n              color: 'black',\n              fontWeight: 'bold',\n              textAlign: 'center',\n              fontSize: '17px',\n              opacity: '0.94',\n              padding: '19px 5px 14px' } },\n          'New Message from ',\n          channels\n        );\n      }\n    }\n  }]);\n\n  return UnopenedChannelNotice;\n}(__WEBPACK_IMPORTED_MODULE_0_preact__[\"Component\"]);\n\nfunction getUnopenedChannels(user, successCb) {\n  Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"render\"])(Object(__WEBPACK_IMPORTED_MODULE_0_preact__[\"h\"])(UnopenedChannelNotice, { unopenedChannels: [], pusherKey: document.body.dataset.pusherKey }), document.getElementById('message-notice'));\n  if (location.pathname.startsWith(\"/connect\")) {\n    return;\n  }\n  fetch('/chat_channels?state=unopened', {\n    method: 'GET',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    var number = document.getElementById(\"connect-number\");\n    if (json.length > 0) {\n      number.classList.add(\"showing\");\n      number.innerHTML = json.length;\n      document.getElementById(\"connect-link\").href = '/connect/' + json[0].adjusted_slug; // Jump the user directly to the channel where appropriate\n    } else {\n      number.classList.remove(\"showing\");\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvamF2YXNjcmlwdC9zcmMvdXRpbHMvZ2V0VW5vcGVuZWRDaGFubmVscy5qc3g/NDFkMiJdLCJuYW1lcyI6WyJVbm9wZW5lZENoYW5uZWxOb3RpY2UiLCJwcm9wcyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwiY2hhbm5lbHMiLCJzdGF0ZSIsInVub3BlbmVkQ2hhbm5lbHMiLCJuZXdPYmoiLCJhZGp1c3RlZF9zbHVnIiwiZSIsImNoYXRfY2hhbm5lbF9hZGp1c3RlZF9zbHVnIiwiZmlsdGVyIiwib2JqIiwibGVuZ3RoIiwid2luZG93IiwiY3VycmVudFVzZXIiLCJ1c2VybmFtZSIsInB1c2giLCJzZXRTdGF0ZSIsInZpc2libGUiLCJ1c2VyX2lkIiwiaWQiLCJudW1iZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJIVE1MIiwiY29tcG9uZW50IiwicmVtb3ZlIiwiaHJlZiIsInNldFRpbWVvdXQiLCJzZXR1cFB1c2hlciIsInB1c2hlcktleSIsImNoYW5uZWxJZCIsIm1lc3NhZ2VDcmVhdGVkIiwicmVjZWl2ZU5ld01lc3NhZ2UiLCJvbmNsaWNrIiwibWFwIiwiY2hhbm5lbCIsImJhY2tncm91bmQiLCJjb2xvciIsImJvcmRlciIsInBhZGRpbmciLCJkaXNwbGF5IiwibWFyZ2luIiwiYm9yZGVyUmFkaXVzIiwiaGFuZGxlQ2xpY2siLCJwb3NpdGlvbiIsInpJbmRleCIsInRvcCIsInJpZ2h0IiwibGVmdCIsImJvcmRlckJvdHRvbSIsImZvbnRXZWlnaHQiLCJ0ZXh0QWxpZ24iLCJmb250U2l6ZSIsIm9wYWNpdHkiLCJDb21wb25lbnQiLCJnZXRVbm9wZW5lZENoYW5uZWxzIiwidXNlciIsInN1Y2Nlc3NDYiIsInJlbmRlciIsImJvZHkiLCJkYXRhc2V0IiwiZmV0Y2giLCJtZXRob2QiLCJjcmVkZW50aWFscyIsInRoZW4iLCJyZXNwb25zZSIsImpzb24i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a0JDLFVBQWxCLENBQTZCLFVBQTdCLENBQUosRUFBOEM7QUFDNUM7QUFDRDtBQUNEOEQsUUFBTSwrQkFBTixFQUF1QztBQUNyQ0MsWUFBUSxLQUQ2QjtBQUVyQ0MsaUJBQWE7QUFGd0IsR0FBdkMsRUFJR0MsSUFKSCxDQUlRO0FBQUEsV0FBWUMsU0FBU0MsSUFBVCxFQUFaO0FBQUEsR0FKUixFQUtHRixJQUxILENBS1EsZ0JBQVE7QUFDWixRQUFNOUMsU0FBU0MsU0FBU0MsY0FBVCxDQUF3QixnQkFBeEIsQ0FBZjtBQUNBLFFBQUk4QyxLQUFLekQsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CUyxhQUFPRyxTQUFQLENBQWlCQyxHQUFqQixDQUFxQixTQUFyQjtBQUNBSixhQUFPSyxTQUFQLEdBQW1CMkMsS0FBS3pELE1BQXhCO0FBQ0FVLGVBQVNDLGNBQVQsQ0FBd0IsY0FBeEIsRUFBd0NNLElBQXhDLGlCQUEyRHdDLEtBQUssQ0FBTCxFQUFROUQsYUFBbkUsQ0FIbUIsQ0FHaUU7QUFDckYsS0FKRCxNQUlPO0FBQ0xjLGFBQU9HLFNBQVAsQ0FBaUJJLE1BQWpCLENBQXdCLFNBQXhCO0FBQ0Q7QUFDRixHQWRILEVBZUcwQyxLQWZILENBZVMsaUJBQVM7QUFDZEMsWUFBUUMsR0FBUixDQUFZQyxLQUFaO0FBQ0QsR0FqQkg7QUFrQkQiLCJmaWxlIjoiMTg4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCwgcmVuZGVyLCBDb21wb25lbnQgfSBmcm9tICdwcmVhY3QnO1xuaW1wb3J0IHNldHVwUHVzaGVyIGZyb20gJy4vcHVzaGVyJztcblxuXG5cbmNsYXNzIFVub3BlbmVkQ2hhbm5lbE5vdGljZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIGNvbnN0IHVub3BlbmVkQ2hhbm5lbHMgPSB0aGlzLnByb3BzLnVub3BlbmVkQ2hhbm5lbHM7XG4gICAgY29uc3QgdmlzaWJsZSA9IHVub3BlbmVkQ2hhbm5lbHMubGVuZ3RoID4gMCA/IHRydWUgOiBmYWxzZTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdmlzaWJsZTogdmlzaWJsZSxcbiAgICAgIHVub3BlbmVkQ2hhbm5lbHMgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgc2V0dXBQdXNoZXIodGhpcy5wcm9wcy5wdXNoZXJLZXksIHtcbiAgICAgIGNoYW5uZWxJZDogYHByaXZhdGUtbWVzc2FnZS1ub3RpZmljYXRpb25zLSR7d2luZG93LmN1cnJlbnRVc2VyLmlkfWAsXG4gICAgICBtZXNzYWdlQ3JlYXRlZDogdGhpcy5yZWNlaXZlTmV3TWVzc2FnZSxcbiAgICB9KTtcbiAgICBjb25zdCBjb21wb25lbnQgPSB0aGlzO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29ubmVjdC1saW5rXCIpLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xuICAgICAgLy9IYWNrLCBzaG91bGQgcHJvYmFibHkgYmUgaXRzIG93biBjb21wb25lbnQgaW4gZnV0dXJlXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbm5lY3QtbnVtYmVyXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93aW5nXCIpO1xuICAgICAgY29tcG9uZW50LnNldFN0YXRlKHt2aXNpYmxlOiBmYWxzZX0pO1xuICAgIH1cbiAgfVxuXG4gIHJlY2VpdmVOZXdNZXNzYWdlID0gZSA9PiB7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvY29ubmVjdFwiKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGxldCBjaGFubmVscyA9IHRoaXMuc3RhdGUudW5vcGVuZWRDaGFubmVscztcbiAgICBjb25zdCBuZXdPYmogPSB7YWRqdXN0ZWRfc2x1ZzogZS5jaGF0X2NoYW5uZWxfYWRqdXN0ZWRfc2x1Z31cbiAgICBpZihjaGFubmVscy5maWx0ZXIob2JqID0+IG9iai5hZGp1c3RlZF9zbHVnID09PSBuZXdPYmouYWRqdXN0ZWRfc2x1ZykubGVuZ3RoID09PSAwICYmXG4gICAgICBuZXdPYmouYWRqdXN0ZWRfc2x1ZyAhPSBgQCR7d2luZG93LmN1cnJlbnRVc2VyLnVzZXJuYW1lfWApIHtcbiAgICAgIGNoYW5uZWxzLnB1c2gobmV3T2JqKTtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB2aXNpYmxlOiAoY2hhbm5lbHMubGVuZ3RoID4gMCAmJiBlLnVzZXJfaWQgIT0gd2luZG93LmN1cnJlbnRVc2VyLmlkKSxcbiAgICAgIHVub3BlbmVkQ2hhbm5lbHM6IGNoYW5uZWxzXG4gICAgfSlcblxuICAgIGNvbnN0IG51bWJlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29ubmVjdC1udW1iZXJcIilcbiAgICBudW1iZXIuY2xhc3NMaXN0LmFkZChcInNob3dpbmdcIilcbiAgICBudW1iZXIuaW5uZXJIVE1MID0gY2hhbm5lbHMubGVuZ3RoXG4gICAgY29uc3QgY29tcG9uZW50ID0gdGhpcztcbiAgICBpZiAoY2hhbm5lbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICBudW1iZXIuY2xhc3NMaXN0LnJlbW92ZShcInNob3dpbmdcIilcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb25uZWN0LWxpbmtcIikuaHJlZiA9IGAvY29ubmVjdC8ke2NoYW5uZWxzWzBdLmFkanVzdGVkX3NsdWd9YFxuICAgIH1cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICBjb21wb25lbnQuc2V0U3RhdGUoe3Zpc2libGU6IGZhbHNlfSk7XG4gICAgfSwgNzUwMClcbiAgfVxuXG4gIGhhbmRsZUNsaWNrID0gZSA9PiB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb25uZWN0LW51bWJlclwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd2luZ1wiKTtcbiAgICB0aGlzLnNldFN0YXRlKHt2aXNpYmxlOiBmYWxzZX0pXG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnZpc2libGUpIHtcbiAgICAgIGNvbnN0IGNoYW5uZWxzID0gdGhpcy5zdGF0ZS51bm9wZW5lZENoYW5uZWxzLm1hcChjaGFubmVsID0+IHtcbiAgICAgICAgcmV0dXJuIDxhXG4gICAgICAgICAgaHJlZj17XCIvY29ubmVjdC9cIitjaGFubmVsLmFkanVzdGVkX3NsdWd9XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBcIiM2NmUyZDVcIixcbiAgICAgICAgICBjb2xvcjogXCJibGFja1wiLFxuICAgICAgICAgIGJvcmRlcjogXCIxcHggc29saWQgYmxhY2tcIixcbiAgICAgICAgICBwYWRkaW5nOiBcIjJweCA3cHhcIixcbiAgICAgICAgICBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxuICAgICAgICAgIG1hcmdpbjogXCIzcHggNnB4XCIsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiBcIjNweFwifX0+e2NoYW5uZWwuYWRqdXN0ZWRfc2x1Z308L2E+XG4gICAgICB9KTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxhXG4gICAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDbGlja31cbiAgICAgICAgICBocmVmPXtcIi9jb25uZWN0L1wiK3RoaXMuc3RhdGUudW5vcGVuZWRDaGFubmVsc1swXS5hZGp1c3RlZF9zbHVnfVxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgICAgekluZGV4OiAnMjAwJyxcbiAgICAgICAgICB0b3A6ICc0NHB4JyxcbiAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgIGJhY2tncm91bmQ6ICcjNjZlMmQ1JyxcbiAgICAgICAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgYmxhY2snLFxuICAgICAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgIGZvbnRTaXplOiAnMTdweCcsXG4gICAgICAgICAgb3BhY2l0eTogJzAuOTQnLFxuICAgICAgICAgIHBhZGRpbmc6ICcxOXB4IDVweCAxNHB4J319PlxuICAgICAgICAgIE5ldyBNZXNzYWdlIGZyb20ge2NoYW5uZWxzfVxuICAgICAgICA8L2E+XG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRVbm9wZW5lZENoYW5uZWxzKHVzZXIsIHN1Y2Nlc3NDYikge1xuICByZW5kZXIoPFVub3BlbmVkQ2hhbm5lbE5vdGljZSB1bm9wZW5lZENoYW5uZWxzPXtbXX0gcHVzaGVyS2V5PXtkb2N1bWVudC5ib2R5LmRhdGFzZXQucHVzaGVyS2V5fSAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lc3NhZ2Utbm90aWNlJykpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9jb25uZWN0XCIpKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgZmV0Y2goJy9jaGF0X2NoYW5uZWxzP3N0YXRlPXVub3BlbmVkJywge1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbicsXG4gIH0pXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC50aGVuKGpzb24gPT4ge1xuICAgICAgY29uc3QgbnVtYmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb25uZWN0LW51bWJlclwiKVxuICAgICAgaWYgKGpzb24ubGVuZ3RoID4gMCkge1xuICAgICAgICBudW1iZXIuY2xhc3NMaXN0LmFkZChcInNob3dpbmdcIilcbiAgICAgICAgbnVtYmVyLmlubmVySFRNTCA9IGpzb24ubGVuZ3RoXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29ubmVjdC1saW5rXCIpLmhyZWYgPSBgL2Nvbm5lY3QvJHtqc29uWzBdLmFkanVzdGVkX3NsdWd9YCAgLy8gSnVtcCB0aGUgdXNlciBkaXJlY3RseSB0byB0aGUgY2hhbm5lbCB3aGVyZSBhcHByb3ByaWF0ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbnVtYmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93aW5nXCIpXG4gICAgICB9XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2phdmFzY3JpcHQvc3JjL3V0aWxzL2dldFVub3BlbmVkQ2hhbm5lbHMuanN4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///188\n");

/***/ }),

/***/ 3:
/*!****************************************!*\
  !*** ./app/javascript/chat/actions.js ***!
  \****************************************/
/*! exports provided: getAllMessages, sendMessage, sendOpen, conductModeration, getChannels, sendKeys, getTwilioToken, getContent, getJSONContents, getChannelInvites, sendChannelInviteAction */
/*! exports used: conductModeration, getAllMessages, getChannelInvites, getChannels, getContent, getJSONContents, getTwilioToken, sendChannelInviteAction, sendKeys, sendMessage, sendOpen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getAllMessages;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = sendMessage;\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = sendOpen;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = conductModeration;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = getChannels;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = sendKeys;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = getTwilioToken;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = getContent;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = getJSONContents;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getChannelInvites;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = sendChannelInviteAction;\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction getAllMessages(channelId, successCb, failureCb) {\n  fetch('/chat_channels/' + channelId, {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction sendMessage(activeChannelId, message, successCb, failureCb) {\n  fetch('/messages', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'X-CSRF-Token': window.csrfToken,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message: {\n        message_markdown: message,\n        user_id: window.currentUser.id,\n        chat_channel_id: activeChannelId\n      }\n    }),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction sendOpen(activeChannelId, successCb, failureCb) {\n  fetch('/chat_channels/' + activeChannelId + '/open', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'X-CSRF-Token': window.csrfToken,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({}),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction conductModeration(activeChannelId, message, successCb, failureCb) {\n  fetch('/chat_channels/' + activeChannelId + '/moderate', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'X-CSRF-Token': window.csrfToken,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      chat_channel: {\n        command: message\n      }\n    }),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction getChannels(query, retrievalID, props, paginationNumber, additionalFilters, successCb, failureCb) {\n  var client = algoliasearch(props.algoliaId, props.algoliaKey);\n  var index = client.initIndex(props.algoliaIndex);\n  var filters = _extends({\n    hitsPerPage: 30 + paginationNumber,\n    page: paginationNumber\n  }, additionalFilters);\n  index.search(query, filters).then(function (content) {\n    var channels = content.hits;\n    if (retrievalID === null || content.hits.filter(function (e) {\n      return e.id === retrievalID;\n    }).length === 1) {\n      successCb(channels, query);\n    } else {\n      index.getObjects(['' + retrievalID], function (err, content) {\n        channels.unshift(content.results[0]);\n        successCb(channels, query);\n      });\n    }\n  });\n}\n\nfunction sendKeys(subscription, successCb, failureCb) {\n  fetch('/push_notification_subscriptions', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'X-CSRF-Token': window.csrfToken,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      subscription: subscription\n    }),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction getTwilioToken(videoChannelName, successCb, failureCb) {\n  fetch('/twilio_tokens/' + videoChannelName, {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction getContent(url, successCb, failureCb) {\n  fetch(url, {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction getJSONContents(url, successCb, failureCb) {\n  fetch(url, {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}\n\nfunction getChannelInvites(successCb, failureCb) {\n  fetch('/chat_channels?state=pending', {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n};\n\nfunction sendChannelInviteAction(id, action, successCb, failureCb) {\n  fetch('/chat_channel_memberships/' + id, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'X-CSRF-Token': window.csrfToken,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      chat_channel_membership: {\n        user_action: action\n      }\n    }),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    return response.json();\n  }).then(successCb).catch(failureCb);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 4:
/*!*************************************!*\
  !*** ./app/javascript/chat/util.js ***!
  \*************************************/
/*! exports provided: getCsrfToken, getUserDataAndCsrfToken, scrollToBottom, setupObserver, hideMessages, adjustTimestamp, setupNotifications, getNotificationState */
/*! exports used: adjustTimestamp, getNotificationState, getUserDataAndCsrfToken, hideMessages, scrollToBottom, setupNotifications, setupObserver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export getCsrfToken */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getUserDataAndCsrfToken;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = scrollToBottom;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = setupObserver;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = hideMessages;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = adjustTimestamp;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = setupNotifications;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getNotificationState;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_intersection_observer__ = __webpack_require__(/*! intersection-observer */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_intersection_observer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_intersection_observer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions__ = __webpack_require__(/*! ./actions */ 3);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nfunction getCsrfToken() {\n  var element = document.querySelector('meta[name=\\'csrf-token\\']');\n\n  return element !== null ? element.content : undefined;\n}\n\nvar getWaitOnUserDataHandler = function getWaitOnUserDataHandler(_ref) {\n  var resolve = _ref.resolve,\n      reject = _ref.reject,\n      _ref$waitTime = _ref.waitTime,\n      waitTime = _ref$waitTime === undefined ? 20 : _ref$waitTime;\n\n  var totalTimeWaiting = 0;\n\n  return function waitingOnUserData() {\n    if (totalTimeWaiting === 3000) {\n      reject(new Error(\"Couldn't find user data on page.\"));\n      return;\n    }\n\n    var csrfToken = getCsrfToken(document);\n    var user = document.body.dataset.user;\n\n\n    if (user && csrfToken !== undefined) {\n      var currentUser = JSON.parse(user);\n\n      resolve({ currentUser: currentUser, csrfToken: csrfToken });\n      return;\n    }\n\n    totalTimeWaiting += waitTime;\n    setTimeout(waitingOnUserData, waitTime);\n  };\n};\n\nfunction getUserDataAndCsrfToken() {\n  return new Promise(function (resolve, reject) {\n    getWaitOnUserDataHandler({ resolve: resolve, reject: reject })();\n  });\n}\n\nfunction scrollToBottom() {\n  var element = document.getElementById('messagelist');\n  element.scrollTop = element.scrollHeight;\n}\n\nfunction setupObserver(callback) {\n  var sentinel = document.querySelector('#messagelist__sentinel');\n  var somethingObserver = new IntersectionObserver(callback, {\n    threshold: [0, 1]\n  });\n  somethingObserver.observe(sentinel);\n}\n\nfunction hideMessages(messages, userId) {\n  var cleanedMessages = Object.keys(messages).reduce(function (accumulator, channelId) {\n    var newMessages = messages[channelId].map(function (message) {\n      if (message.user_id === userId) {\n        var messageClone = Object.assign({ type: 'hidden' }, message);\n        messageClone.message = '<message removed>';\n        messageClone.messageColor = 'lightgray';\n        return messageClone;\n      }\n      return message;\n    });\n    return _extends({}, accumulator, _defineProperty({}, channelId, newMessages));\n  }, {});\n  return cleanedMessages;\n}\n\nfunction adjustTimestamp(timestamp) {\n  var time = new Date(timestamp);\n  var options = {\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  };\n  time = new Intl.DateTimeFormat('en-US', options).format(time);\n  return time;\n}\n\nfunction setupNotifications() {\n  navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\n    serviceWorkerRegistration.pushManager.getSubscription().then(function (subscription) {\n      if (subscription) {\n        return subscription;\n      }\n      return serviceWorkerRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: window.vapidPublicKey\n      });\n    }).then(function (subscription) {\n      Object(__WEBPACK_IMPORTED_MODULE_1__actions__[\"i\" /* sendKeys */])(subscription.toJSON(), null, null);\n    });\n  });\n}\n\nfunction getNotificationState() {\n  // Not yet ready\n  if (!window.location.href.includes('ask-for-notifications')) {\n    return 'dont-ask';\n  }\n\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    return 'not-supported';\n  }\n\n  var _Notification = Notification,\n      permission = _Notification.permission;\n\n\n  if (permission === 'granted') {\n    setupNotifications();\n  }\n\n  return permission === 'default' ? 'waiting-permission' : permission;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 9:
/*!********************************************!*\
  !*** ./app/javascript/src/utils/pusher.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = setupPusher;\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\n// import Pusher from 'pusher-js';\n\nfunction setupPusher(key, callbackObjects) {\n  var pusher = void 0;\n  return __webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, /*! pusher-js */ 142)).then(function (_ref) {\n    _objectDestructuringEmpty(_ref);\n\n    if (window.pusher) {\n      pusher = window.pusher;\n    } else {\n      pusher = new Pusher(key, {\n        authEndpoint: '/pusher/auth',\n        auth: {\n          headers: {\n            'X-CSRF-Token': window.csrfToken\n          }\n        },\n        cluster: 'us2',\n        encrypted: true\n      });\n      window.pusher = pusher;\n    }\n    var channel = pusher.subscribe(callbackObjects.channelId.toString());\n    channel.bind('message-created', callbackObjects.messageCreated);\n    channel.bind('channel-cleared', callbackObjects.channelCleared);\n    channel.bind('user-banned', callbackObjects.redactUserMessages);\n    channel.bind('client-livecode', callbackObjects.liveCoding);\n    channel.bind('client-initiatevideocall', callbackObjects.videoCallInitiated);\n    channel.bind('client-endvideocall', callbackObjects.videoCallEnded);\n\n    // channel.bind('pusher:subscription_succeeded', callbackObjects.channelSubscribed);\n    channel.bind('pusher:subscription_error', callbackObjects.channelError);\n    return channel;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvamF2YXNjcmlwdC9zcmMvdXRpbHMvcHVzaGVyLmpzP2VjN2IiXSwibmFtZXMiOlsic2V0dXBQdXNoZXIiLCJrZXkiLCJjYWxsYmFja09iamVjdHMiLCJwdXNoZXIiLCJ0aGVuIiwid2luZG93IiwiUHVzaGVyIiwiYXV0aEVuZHBvaW50IiwiYXV0aCIsImhlYWRlcnMiLCJjc3JmVG9rZW4iLCJjbHVzdGVyIiwiZW5jcnlwdGVkIiwiY2hhbm5lbCIsInN1YnNjcmliZSIsImNoYW5uZWxJZCIsInRvU3RyaW5nIiwiYmluZCIsIm1lc3NhZ2VDcmVhdGVkIiwiY2hhbm5lbENsZWFyZWQiLCJyZWRhY3RVc2VyTWVzc2FnZXMiLCJsaXZlQ29kaW5nIiwidmlkZW9DYWxsSW5pdGlhdGVkIiwidmlkZW9DYWxsRW5kZWQiLCJjaGFubmVsRXJyb3IiXSwibWFwcGluZ3MiOiI7OztBQUFBOztBQUVlLFNBQVNBLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCQyxlQUExQixFQUEyQztBQUN4RCxNQUFJQyxlQUFKO0FBQ0EsU0FBTyxrR0FDSkMsSUFESSxDQUNDLGdCQUFTO0FBQUE7O0FBQ2YsUUFBSUMsT0FBT0YsTUFBWCxFQUFtQjtBQUNqQkEsZUFBU0UsT0FBT0YsTUFBaEI7QUFDRCxLQUZELE1BRU87QUFDTEEsZUFBUyxJQUFJRyxNQUFKLENBQVdMLEdBQVgsRUFBZ0I7QUFDdkJNLHNCQUFjLGNBRFM7QUFFdkJDLGNBQU07QUFDSkMsbUJBQVM7QUFDUCw0QkFBZ0JKLE9BQU9LO0FBRGhCO0FBREwsU0FGaUI7QUFPdkJDLGlCQUFTLEtBUGM7QUFRdkJDLG1CQUFXO0FBUlksT0FBaEIsQ0FBVDtBQVVBUCxhQUFPRixNQUFQLEdBQWdCQSxNQUFoQjtBQUNEO0FBQ0QsUUFBTVUsVUFBVVYsT0FBT1csU0FBUCxDQUFpQlosZ0JBQWdCYSxTQUFoQixDQUEwQkMsUUFBMUIsRUFBakIsQ0FBaEI7QUFDQUgsWUFBUUksSUFBUixDQUFhLGlCQUFiLEVBQWdDZixnQkFBZ0JnQixjQUFoRDtBQUNBTCxZQUFRSSxJQUFSLENBQWEsaUJBQWIsRUFBZ0NmLGdCQUFnQmlCLGNBQWhEO0FBQ0FOLFlBQVFJLElBQVIsQ0FBYSxhQUFiLEVBQTRCZixnQkFBZ0JrQixrQkFBNUM7QUFDQVAsWUFBUUksSUFBUixDQUFhLGlCQUFiLEVBQWdDZixnQkFBZ0JtQixVQUFoRDtBQUNBUixZQUFRSSxJQUFSLENBQWEsMEJBQWIsRUFBeUNmLGdCQUFnQm9CLGtCQUF6RDtBQUNBVCxZQUFRSSxJQUFSLENBQWEscUJBQWIsRUFBb0NmLGdCQUFnQnFCLGNBQXBEOztBQUVBO0FBQ0FWLFlBQVFJLElBQVIsQ0FBYSwyQkFBYixFQUEwQ2YsZ0JBQWdCc0IsWUFBMUQ7QUFDQSxXQUFPWCxPQUFQO0FBQ0QsR0E1Qk0sQ0FBUDtBQTZCRCIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFB1c2hlciBmcm9tICdwdXNoZXItanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR1cFB1c2hlcihrZXksIGNhbGxiYWNrT2JqZWN0cykge1xuICBsZXQgcHVzaGVyO1xuICByZXR1cm4gaW1wb3J0KCdwdXNoZXItanMnKVxuICAgIC50aGVuKCh7IH0pID0+IHtcbiAgICBpZiAod2luZG93LnB1c2hlcikge1xuICAgICAgcHVzaGVyID0gd2luZG93LnB1c2hlclxuICAgIH0gZWxzZSB7XG4gICAgICBwdXNoZXIgPSBuZXcgUHVzaGVyKGtleSwge1xuICAgICAgICBhdXRoRW5kcG9pbnQ6ICcvcHVzaGVyL2F1dGgnLFxuICAgICAgICBhdXRoOiB7XG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ1gtQ1NSRi1Ub2tlbic6IHdpbmRvdy5jc3JmVG9rZW5cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGNsdXN0ZXI6ICd1czInLFxuICAgICAgICBlbmNyeXB0ZWQ6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIHdpbmRvdy5wdXNoZXIgPSBwdXNoZXI7XG4gICAgfVxuICAgIGNvbnN0IGNoYW5uZWwgPSBwdXNoZXIuc3Vic2NyaWJlKGNhbGxiYWNrT2JqZWN0cy5jaGFubmVsSWQudG9TdHJpbmcoKSk7XG4gICAgY2hhbm5lbC5iaW5kKCdtZXNzYWdlLWNyZWF0ZWQnLCBjYWxsYmFja09iamVjdHMubWVzc2FnZUNyZWF0ZWQpO1xuICAgIGNoYW5uZWwuYmluZCgnY2hhbm5lbC1jbGVhcmVkJywgY2FsbGJhY2tPYmplY3RzLmNoYW5uZWxDbGVhcmVkKTtcbiAgICBjaGFubmVsLmJpbmQoJ3VzZXItYmFubmVkJywgY2FsbGJhY2tPYmplY3RzLnJlZGFjdFVzZXJNZXNzYWdlcyk7XG4gICAgY2hhbm5lbC5iaW5kKCdjbGllbnQtbGl2ZWNvZGUnLCBjYWxsYmFja09iamVjdHMubGl2ZUNvZGluZyk7XG4gICAgY2hhbm5lbC5iaW5kKCdjbGllbnQtaW5pdGlhdGV2aWRlb2NhbGwnLCBjYWxsYmFja09iamVjdHMudmlkZW9DYWxsSW5pdGlhdGVkKTtcbiAgICBjaGFubmVsLmJpbmQoJ2NsaWVudC1lbmR2aWRlb2NhbGwnLCBjYWxsYmFja09iamVjdHMudmlkZW9DYWxsRW5kZWQpO1xuICAgIFxuICAgIC8vIGNoYW5uZWwuYmluZCgncHVzaGVyOnN1YnNjcmlwdGlvbl9zdWNjZWVkZWQnLCBjYWxsYmFja09iamVjdHMuY2hhbm5lbFN1YnNjcmliZWQpO1xuICAgIGNoYW5uZWwuYmluZCgncHVzaGVyOnN1YnNjcmlwdGlvbl9lcnJvcicsIGNhbGxiYWNrT2JqZWN0cy5jaGFubmVsRXJyb3IpO1xuICAgIHJldHVybiBjaGFubmVsO1xuICB9KTtcbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2phdmFzY3JpcHQvc3JjL3V0aWxzL3B1c2hlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n");

/***/ })

},[187]);